{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "app-planName": {
            "type": "string",
            "minLength": 1
        },
        "app-planSkuName": {
            "type": "string",
            "defaultValue": "F1",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
            ],
            "metadata": {
                "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
            }
        },
        "webAppStorageType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Premium_LRS"
            ]
        }
    },
    "variables": {
        "webAppName": "[concat('web-app-', uniqueString(resourceGroup().id))]",
        "storageAccountName": "[concat('appstorage', uniqueString(resourceGroup().id))]",
        "cosmosDbAccountName": "[concat('db-', uniqueString(resourceGroup().id))]",
        "cosmosOfferType": "Standard",
        "appServicePlanName": "[concat('app-plan-', uniqueString(resourceGroup().id))]",
    },
    "resources": [
        {
            "name": "[variables('appServicePlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-08-01",
            "sku": {
                "name": "[parameters('app-planSkuName')]"
            },
            "dependsOn": [],
            "tags": {
                "displayName": "app-service-plan"
            },
            "properties": {
                "name": "[variables('appServicePlanName')]",
                "numberOfWorkers": 1
            }
        },
        {
            "name": "[variables('webAppName')]",
            "type": "Microsoft.Web/sites",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            ],
            "tags": {
                "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName')))]": "Resource",
                "displayName": "primary-web-app"
            },
            "properties": {
                "name": "[variables('webAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "siteConfig": {
                    "connectionStrings": []
                }
            },
            "resources": [
                {
                    "name": "appsettings",
                    "type": "config",
                    "apiVersion": "2015-08-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites/sourcecontrols', variables('webAppName'), 'web')]",
                        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]",
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    ],
                    "tags": {
                        "displayName": "appsettings"
                    },
                    "properties": {
                        "GovModeratorConfig:StorageConfig:AccountName": "[variables('storageAccountName')]",
                        "GovModeratorConfig:StorageConfig:AccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
                        "GovModeratorConfig:StorageConfig:EndpointSuffix": "core.usgovcloudapi.net",
                        "GovModeratorConfig:CosmosDbConfig:EndpointUri": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('cosmosDbAccountName'))).documentEndpoint]",
                        "GovModeratorConfig:CosmosDbConfig:PrimaryKey": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosDbAccountName')), '2015-04-08').primaryMasterKey]"
                    }
                },
                {
                    "apiVersion": "2015-08-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "https://github.com/yujhongmicrosoft/gov-function-sample-webapp.git",
                        "branch": "master",
                        "IsManualIntegration": true
                    }
                }
            ]
        },
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[resourceGroup().location]",
            "apiVersion": "2016-01-01",
            "sku": {
                "name": "[parameters('webAppStorageType')]"
            },
            "dependsOn": [],
            "tags": {
                "displayName": "webAppStorage"
            },
            "kind": "Storage"
        },
        {
            "apiVersion": "2015-04-08",
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "kind": "GlobalDocumentDB",
            "name": "[variables('cosmosDbAccountName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('cosmosDbAccountName')]",
                "databaseAccountOfferType": "[variables('cosmosOfferType')]",
                "locations": [
                    {
                        "locationName": "[resourceGroup().location]",
                        "failoverPriority": 0
                    },
                    {
                        "locationName": "[resourceGroup().location]",
                        "failoverPriority": 1
                    }
                ],
                "capabilities": [
                    {
                        "name": "SQL"
                    }
                ]
            },
            "tags": {
                "defaultExperience": "SQL",
                "displayName": "CosmosDB"
            }
        }
    ],
    "outputs": {}
}
